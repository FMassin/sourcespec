# Config file for source_spec.py

# GENERAL PARAMETERS --------
DEBUG = boolean(default=False) #True: print debug information

PLOT_SHOW = boolean(default=False)
PLOT_SAVE = boolean(default=True)
PLOT_SAVE_FORMAT = option('png', 'pdf', default='png')

# Trace format
# Currently supported: 'Antilles', 'CRL', 'ISNet', 'IPOC'
trace_format = option('Antilles', 'CRL', 'ISNet', 'IPOC', default=None)

# Path to pickle catalog (for 'Antilles' format)
pickle_catalog = string(default=None)
pickle_classpath = string(default=None)

# Directory or file for dataless:
dataless = string(default=None)

# Alternatively, a directory with PAZ files can be specified:
paz = string(default=None)

# Traceid file for station SCNL correction (optional):
traceids = string(default=None)

# Database file for storing output parameters (optional):
database_file = string(default=None)

# correct_instrumental_reponse (optional, default=True):
#   'True', 'False' or 'sensitivity only'
# If 'sensitivity only', traces are not fully deconvolved
# for the instrumental response: only the
# sensitivity is corrected (faster, especially
# on a large number of traces).
correct_instrumental_response = option('True', 'False', 'sensitivity_only', default='True')

# pre_filt:
# Pre-filtering frequencies for instrument correction
# Specify the four corner frequencies (f1,f2,f3,f4)
# of a cosine taper which is one between f2 and f3
# and tapers to zero for f1 < f < f2 and f3 < f < f4.
pre_filt = float_list(default=list(0.1, 0.2, 55., 60.))
# -------- GENERAL PARAMETERS


# INITIAL PARAMETERS --------
# P and S wave velocity:
vp = float(default=5.5)
vs = float(default=3.2)
# density:
rho = float(default=2500)
# radiation pattern coefficient:
rps = float(default=0.62)
# Brune stress drop (MPa):
bsd = float(default=10e6)
# -------- INITIAL PARAMETERS


# S/N PARAMETERS --------
# Minimum rms (in trace units before instrument corrections)
# to consider a trace as noise
rmsmin = float(default=0.)

# Noise window for S/N and noise weighting
pre_p_time       = float(default=0.5)
# noise_win_length is only used for S/N
# noise weighting function uses s_win_length
# (see further below)
noise_win_length = float(default=3.0)

# S/N ratio min
sn_min = float(default=0)
# -------- S/N PARAMETERS


# SPECTRUM PARAMETERS --------
time_domain_int = boolean(default=False)
ignore_vertical = boolean(default=False)

# S-wave window (sec)
pre_s_time   = float(default=1.0)
s_win_length = float(default=5.0)

# Taper
# between 0 (no taper) and 0.5
taper_halfwidth = float(0, 0.5, default=0.05)

# Spectral window length (sec)
# Signal is tapered, and then zero padded to
# this window length, so that the spectral
# sampling is fixed to 1/spectral_win_length.
# Comment out (or set to 'nan') to use
# S-wave window as spectral window length.
spectral_win_length = float(default='nan')

# Residuals file path
# (a pickle file with the
# mean residuals per station,
# used for station correction):
residuals_filepath = string(default=None)

# Band-pass frequencies for accelerometers and velocimeters (Hz)
# TODO: calculate from sampling rate?
bp_freqmin_acc    = float(default=1.0)
bp_freqmax_acc    = float(default=50.0)
bp_freqmin_shortp = float(default=1.0)
bp_freqmax_shortp = float(default=40.0)
bp_freqmin_broadb = float(default=0.5)
bp_freqmax_broadb = float(default=40.0)

# Filter cut frequencies for accelerometers and velocimeters
freq1_acc     = float(default=1.0)
freq2_acc     = float(default=30.0)
freq1_shortp  = float(default=1.0)
freq2_shortp  = float(default=30.0)
freq1_broadb  = float(default=0.5)
freq2_broadb  = float(default=30.0)
# -------- SPECTRUM PARAMETERS


# INVERSION PARAMETERS --------
# spectral weighting:
#   weight for f<=f_weight
#   1      for f> f_weight
f_weight = float(default=7.) #Hz
weight = float(default=10.)
# use noise weighting
noise_weighting = boolean(default=False)
# initial values for fc (optional)
fc_0 = float(default='nan')
# initial value for t_star
t_star_0 = float(default=0.045)
# inversion algorithm
# LM: Levenburg-Marquardt algorithm
# TNC: truncated Newton algorithm (with bounds)
inv_algorithm = option('LM', 'TNC', default='LM')
# parameter bounds (only for TNC)
# use 'nan' to indicate no bound
Mw_min_max = float_list(default=list('nan', 'nan'))
fc_min_max = float_list(default=list('nan', 'nan'))
t_star_min_max = float_list(default=list('nan', 'nan'))
# optional : Qo bounds (converted
# into t_star bounds in the code).
# comment if not used:
Qo_min_max = float_list(default=list('nan', 'nan'))
# -------- INVERSION PARAMETERS


# POST-PROCESSING PARAMETERS --------
# Min and max acceptable corner frequencies (Hz)
min_corner_freq = float(default=0.5)
max_corner_freq = float(default=40.)
# -------- POST-PROCESSING PARAMETERS


# LOCAL MAGNITUDE PARAMETERS --------
pre_mag_time = float(default=5.0)
mag_win_length = float(default=20.0)
# -------- LOCAL MAGNITUDE PARAMETERS
